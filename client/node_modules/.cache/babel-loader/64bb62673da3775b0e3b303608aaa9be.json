{"ast":null,"code":"var _jsxFileName = \"/Users/pembalama/Udemy_Learning/lama-handcrafts/client/src/components/cart-preview/cart-preview.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './cart-preview.styles.scss';\n\nconst CartPreview = ({\n  cartItems,\n  history,\n  dispatch\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, cartItems.length ? cartItems.map(cartItem => {\n    return /*#__PURE__*/React.createElement(CartItem, {\n      key: cartItem.id,\n      item: cartItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cart-empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, \"Checkout\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartPreview));","map":{"version":3,"sources":["/Users/pembalama/Udemy_Learning/lama-handcrafts/client/src/components/cart-preview/cart-preview.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartPreview","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAO,4BAAP;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACzD,sBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,SAAS,CAACG,MAAV,GACAH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAAI;AACzB,wBAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,MAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA,GAFD,CADA,gBAKA;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,CADD,eAUC,oBAAC,YAAD;AACC,IAAA,OAAO,EAAE,MAAM;AACdJ,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACA,KAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVD,CADD;AAqBA,CAtBD;;AAwBA,MAAMU,eAAe,GAAGf,wBAAwB,CAAC;AAChDO,EAAAA,SAAS,EAAEH;AADqC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACF,OAAO,CAACgB,eAAD,CAAP,CAAyBT,WAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nimport './cart-preview.styles.scss';\n\nconst CartPreview = ({ cartItems, history, dispatch }) => {\n\treturn (\n\t\t<div className=\"cart-dropdown\">\n\t\t\t<div className=\"cart-items\">\n\t\t\t\t{cartItems.length ? (\n\t\t\t\t\tcartItems.map(cartItem => {\n\t\t\t\t\t\treturn <CartItem key={cartItem.id} item={cartItem} />;\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t<span className=\"cart-empty-message\">Your cart is empty</span>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<CustomButton\n\t\t\t\tonClick={() => {\n\t\t\t\t\thistory.push('/checkout');\n\t\t\t\t\tdispatch(toggleCartHidden());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tCheckout\n\t\t\t</CustomButton>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = createStructuredSelector({\n\tcartItems: selectCartItems,\n});\n\nexport default withRouter(connect(mapStateToProps)(CartPreview));\n"]},"metadata":{},"sourceType":"module"}