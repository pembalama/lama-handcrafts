{"ast":null,"code":"import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect';\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  shoes: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n};\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => {\n  return shop.collections;\n}); //implementing curried function--> function returning another function; also using lodash.memoize to utilize memoization for the selector function that is being returned\n\nexport const selectCollection = memoize(collectionUrlParam => {\n  return createSelector([selectCollections], collections => {\n    return collections[collectionUrlParam];\n  });\n});","map":{"version":3,"sources":["/Users/pembalama/Udemy_Learning/lama-handcrafts/src/redux/shop/shop.selectors.js"],"names":["memoize","createSelector","COLLECTION_ID_MAP","hats","shoes","jackets","womens","mens","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEA,MAAMC,iBAAiB,GAAG;AACzBC,EAAAA,IAAI,EAAE,CADmB;AAEzBC,EAAAA,KAAK,EAAE,CAFkB;AAGzBC,EAAAA,OAAO,EAAE,CAHgB;AAIzBC,EAAAA,MAAM,EAAE,CAJiB;AAKzBC,EAAAA,IAAI,EAAE;AALmB,CAA1B;;AAQA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGV,cAAc,CAAC,CAACO,UAAD,CAAD,EAAeE,IAAI,IAAI;AACrE,SAAOA,IAAI,CAACE,WAAZ;AACA,CAF8C,CAAxC,C,CAIP;;AACA,OAAO,MAAMC,gBAAgB,GAAGb,OAAO,CAACc,kBAAkB,IAAI;AAC7D,SAAOb,cAAc,CAAC,CAACU,iBAAD,CAAD,EAAsBC,WAAW,IAAI;AACzD,WAAOA,WAAW,CAACE,kBAAD,CAAlB;AACA,GAFoB,CAArB;AAGA,CAJsC,CAAhC","sourcesContent":["import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect';\n\nconst COLLECTION_ID_MAP = {\n\thats: 1,\n\tshoes: 2,\n\tjackets: 3,\n\twomens: 4,\n\tmens: 5,\n};\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => {\n\treturn shop.collections;\n});\n\n//implementing curried function--> function returning another function; also using lodash.memoize to utilize memoization for the selector function that is being returned\nexport const selectCollection = memoize(collectionUrlParam => {\n\treturn createSelector([selectCollections], collections => {\n\t\treturn collections[collectionUrlParam];\n\t});\n});\n"]},"metadata":{},"sourceType":"module"}