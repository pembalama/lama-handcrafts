{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyCTyq0pyI5LwYRrp6D0LsKf8RvSPLXO6_A',\n  authDomain: 'lamastore-db.firebaseapp.com',\n  databaseURL: 'https://lamastore-db.firebaseio.com',\n  projectId: 'lamastore-db',\n  storageBucket: 'lamastore-db.appspot.com',\n  messagingSenderId: '876086281095',\n  appId: '1:876086281095:web:61077fa26328c7791e0922',\n  measurementId: 'G-FLEDCJEMF2'\n};\nfirebase.initializeApp(config); //storing user in database\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(firestore.doc('users/128fdfsdf')); // const userRef = firestore.doc(`users/${userAuth.uid}`);\n  // const snapShot = await userRef.get();\n  // if (!snapShot.exists) {\n  // \tconst { displayName, email } = userAuth;\n  // \tconst createdAt = new Date();\n  // \ttry {\n  // \t\tawait userRef.set({\n  // \t\t\tdisplayName,\n  // \t\t\temail,\n  // \t\t\tcreatedAt,\n  // \t\t\t...additionalData,\n  // \t\t});\n  // \t} catch (error) {\n  // \t\tconsole.log('error creating user', error.message);\n  // \t}\n  // }\n  // return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/pembalama/Udemy_Learning/lama-handcrafts/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","console","log","firestore","doc","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,8BAFE;AAGdC,EAAAA,WAAW,EAAE,qCAHC;AAIdC,EAAAA,SAAS,EAAE,cAJG;AAKdC,EAAAA,aAAa,EAAE,0BALD;AAMdC,EAAAA,iBAAiB,EAAE,cANL;AAOdC,EAAAA,KAAK,EAAE,2CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,E,CAEA;;AACA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E,MAAI,CAACD,QAAL,EAAe;AAEfE,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACC,GAAV,CAAc,iBAAd,CAAZ,EAH4E,CAK5E;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBM;AA0BP,OAAO,MAAMC,IAAI,GAAGlB,QAAQ,CAACkB,IAAT,EAAb;AACP,OAAO,MAAMF,SAAS,GAAGhB,QAAQ,CAACgB,SAAT,EAAlB;AAEP,MAAMG,QAAQ,GAAG,IAAInB,QAAQ,CAACkB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAenB,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n\tapiKey: 'AIzaSyCTyq0pyI5LwYRrp6D0LsKf8RvSPLXO6_A',\n\tauthDomain: 'lamastore-db.firebaseapp.com',\n\tdatabaseURL: 'https://lamastore-db.firebaseio.com',\n\tprojectId: 'lamastore-db',\n\tstorageBucket: 'lamastore-db.appspot.com',\n\tmessagingSenderId: '876086281095',\n\tappId: '1:876086281095:web:61077fa26328c7791e0922',\n\tmeasurementId: 'G-FLEDCJEMF2',\n};\n\nfirebase.initializeApp(config);\n\n//storing user in database\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\tif (!userAuth) return;\n\n\tconsole.log(firestore.doc('users/128fdfsdf'));\n\n\t// const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n\t// const snapShot = await userRef.get();\n\n\t// if (!snapShot.exists) {\n\t// \tconst { displayName, email } = userAuth;\n\t// \tconst createdAt = new Date();\n\t// \ttry {\n\t// \t\tawait userRef.set({\n\t// \t\t\tdisplayName,\n\t// \t\t\temail,\n\t// \t\t\tcreatedAt,\n\t// \t\t\t...additionalData,\n\t// \t\t});\n\t// \t} catch (error) {\n\t// \t\tconsole.log('error creating user', error.message);\n\t// \t}\n\t// }\n\t// return userRef;\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}