{"ast":null,"code":"import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => {\n  return shop.collections;\n});\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => {\n  return collections ? Object.keys(collections).map(key => {\n    return collections[key];\n  }) : [];\n}); //implementing curried function--> function returning another function; also using lodash.memoize to utilize memoization for the selector function that is being returned\n\nexport const selectCollection = memoize(collectionUrlParam => {\n  return createSelector([selectCollections], collections => {\n    return collections[collectionUrlParam];\n  });\n});","map":{"version":3,"sources":["/Users/pembalama/Udemy_Learning/lama-handcrafts/src/redux/shop/shop.selectors.js"],"names":["memoize","createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAAC,CAACC,UAAD,CAAD,EAAeE,IAAI,IAAI;AACrE,SAAOA,IAAI,CAACE,WAAZ;AACA,CAF8C,CAAxC;AAIP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACxD,CAACI,iBAAD,CADwD,EAExDC,WAAW,IAAI;AACd,SAAOA,WAAW,GACfE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAI;AACpC,WAAOL,WAAW,CAACK,GAAD,CAAlB;AACC,GAFD,CADe,GAIf,EAJH;AAKA,CARuD,CAAlD,C,CAWP;;AACA,OAAO,MAAMC,gBAAgB,GAAGZ,OAAO,CAACa,kBAAkB,IAAI;AAC7D,SAAOZ,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAsBC,WAAW,IAAI;AACzD,WAAOA,WAAW,CAACO,kBAAD,CAAlB;AACA,GAFoB,CAArB;AAGA,CAJsC,CAAhC","sourcesContent":["import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => {\n\treturn shop.collections;\n});\n\nexport const selectCollectionsForPreview = createSelector(\n\t[selectCollections],\n\tcollections => {\n\t\treturn collections\n\t\t\t? Object.keys(collections).map(key => {\n\t\t\t\t\treturn collections[key];\n\t\t\t  })\n\t\t\t: [];\n\t}\n);\n\n//implementing curried function--> function returning another function; also using lodash.memoize to utilize memoization for the selector function that is being returned\nexport const selectCollection = memoize(collectionUrlParam => {\n\treturn createSelector([selectCollections], collections => {\n\t\treturn collections[collectionUrlParam];\n\t});\n});\n"]},"metadata":{},"sourceType":"module"}